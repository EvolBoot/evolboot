<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <springProperty scope="context" name="logging.filename" source="logging.filename"/>
    <!-- 日志目录 -->
    <property name="LOG_PATH" value="/opt/logs/evol"/>

    <!-- 控制台日志 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d [%t] %-5p [%c:%L] - %m%n</pattern>
        </layout>
    </appender>

    <!-- 默认日志文件 -->
    <appender name="DEFAULT_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 正在记录的日志文件的路径及文件名 -->
        <file>${LOG_PATH}/${logging.filename}/default.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${logging.filename}/default_%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 日志的保存时间，以天为单位 -->
            <maxHistory>30</maxHistory>
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
        <!-- 日志输出的格式 -->
        <encoder>
            <pattern>%d [%t] %-5p [%c:%L] - %m%n</pattern>
        </encoder>
    </appender>

    <!-- 默认日志文件:异步输出 -->
    <appender name="ASYNC_DEFAULT_LOG" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="DEFAULT_LOG"/>
    </appender>


    <!-- 错误日志文件 -->
    <appender name="ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${logging.filename}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${logging.filename}/error_%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 日志的保存时间，以天为单位 -->
            <maxHistory>30</maxHistory>
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
        <!-- 表示只接收ERROR错误 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- 日志输出的格式 -->
        <encoder>
            <pattern>%d [%t] %-5p [%c:%L] - %m%n</pattern>
        </encoder>
    </appender>

    <!-- 错误日志文件:异步输出 -->
    <appender name="ASYNC_ERROR_LOG" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="ERROR_LOG"/>
    </appender>


    <!-- 短信日志 -->
    <appender name="SMS_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${logging.filename}/sms.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${logging.filename}/sms_%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 日志的保存时间，以天为单位 -->
            <maxHistory>30</maxHistory>
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
        <!-- 日志输出的格式 -->
        <encoder>
            <pattern>%d [%t] %-5p [%c:%L] - %m%n</pattern>
        </encoder>
    </appender>

    <!-- 短信日志:异步输出 -->
    <appender name="ASYNC_SMS_LOG" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="SMS_LOG"/>
    </appender>


    <!-- 支付日志 -->
    <appender name="PAYMENT_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${logging.filename}/payment.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${logging.filename}/payment_%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 日志的保存时间，以天为单位 -->
            <maxHistory>30</maxHistory>
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
        <!-- 日志输出的格式 -->
        <encoder>
            <pattern>%d [%t] %-5p [%c:%L] - %m%n</pattern>
        </encoder>
    </appender>

    <!-- 支付日志: 异步输出 -->
    <appender name="ASYNC_PAYMENT_LOG" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="PAYMENT_LOG"/>
    </appender>


    <!-- 注册IP日志 -->
    <appender name="REGISTER_IP_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${logging.filename}/register_ip.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${logging.filename}/register_ip_%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 日志的保存时间，以天为单位 -->
            <maxHistory>30</maxHistory>
            <maxFileSize>1GB</maxFileSize>
        </rollingPolicy>
        <!-- 日志输出的格式 -->
        <encoder>
            <pattern>%d [%t] %-5p [%c:%L] - %m%n</pattern>
        </encoder>
    </appender>


    <!--  日志级别  -->
    <logger name="org.springframework.orm.jpa" level="INFO"/>
    <logger name="org.evolboot" level="INFO"/>
    <logger name="org.springframework.web" level="INFO"/>


    <!--  短信日志  -->
    <logger name="org.evolboot.sms" level="INFO">
        <appender-ref ref="ASYNC_SMS_LOG"/>
    </logger>

    <!--  支付日志  -->
    <logger name="org.evolboot.pay" level="INFO">
        <appender-ref ref="ASYNC_PAYMENT_LOG"/>
    </logger>


    <!-- 默认日志级别 -->
    <root level="INFO">
        <appender-ref ref="ASYNC_DEFAULT_LOG"/>
        <appender-ref ref="ASYNC_ERROR_LOG"/>
        <appender-ref ref="STDOUT"/>
    </root>


</configuration>